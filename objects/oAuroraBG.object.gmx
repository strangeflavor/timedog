<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBG</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wavy_sprite = sAurora;

sh_time = shader_get_uniform(sh_wavy, "time");
sh_texuvs = shader_get_uniform(sh_wavy, "texuvs");
var _uvs = sprite_get_uvs(wavy_sprite,0);
tex_x = _uvs[0];
tex_y = _uvs[1];
tex_w = (_uvs[2] - _uvs[0]);
tex_h = 1 / (_uvs[3] - _uvs[1]);
time = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !surface_exists(noisesurf) noisesurf = surface_create(view_wview[0], view_hview[0]);
if !surface_exists(starssurf) starssurf = surface_create(view_wview[0], view_hview[0]);

///////////////////////////////////
// draw flat bg color cycle
///////////////////////////////////

c1 = make_color_rgb(0,0,30);
c2 = make_color_rgb(0,5,50);

if ded {
    c1 = make_color_rgb(255,0,0);
    c2 = make_color_rgb(0,10,255);
}

bg_color = merge_color(c1,c2,abs(sin(objectAge*bg_color_rate)));
draw_set_color(bg_color);
draw_rectangle(0,0,vw,vh,false);

///////////////////////////////////
// draw starfields
///////////////////////////////////


///////////////////////////////////
// draw starfields
///////////////////////////////////

if surface_exists(starssurf) {
    surface_set_target(starssurf);
    draw_clear_alpha(c_white,0)

    var starfieldAlpha = 1;

    for (var i=0;i&lt;background_vspeed[0]/8;i+=1) {
        draw_background_tiled_ext(bgStarfield,0,background_y[0]+i*2,2,2,c_blue,starfieldAlpha);
        draw_background_tiled_ext(bgStarfieldTop,0,background_y[1]+i*3,2,2,c_white,starfieldAlpha);
    }

    draw_background_tiled_ext(bgStarfield,0,background_y[0],2,2,merge_color(c_white,c_blue,abs(sin(objectAge*.002))),1);

    // draw twinkle blocker circles
    for (var i=0;i&lt;3;i+=1) {
        //draw_set_color(c_black);
        //make(surfaceTester); //7,9
        //draw_set_blend_mode_ext(surfaceTester.srcmode,surfaceTester.destmode);
        draw_set_blend_mode_ext(9,1);
        draw_circle(twinkleSpotX[i],twinkleSpotY[i],32,false);
        draw_set_blend_mode(bm_normal);

        twinkleSpotX[i] += tXVel[i];
        twinkleSpotY[i] += tYVel[i];
        if twinkleSpotX[i] &gt;= vw or twinkleSpotX[i] &lt;= 0 {
            tXVel[i] = -sign(tXVel[i])*choose(1,2,.5);
        }

        if twinkleSpotY[i] &gt;= vh or twinkleSpotY[i] &lt;= 0 {
            tYVel[i] = -sign(tYVel[i])*choose(1,2,.5);
        }
    }

    surface_reset_target();


    if !ded {
        draw_set_alpha(starAlpha);
        draw_surface_stretched(starssurf, 0, 0, display_get_gui_width(), display_get_gui_height());
        draw_set_alpha(1);
    }
}


var starfieldColor = merge_color(c_gray,make_color_rgb(16,32,98),abs(sin(objectAge*.002)));
//makeBlendTester();
//draw_background_tiled_ext(bgMoon,0,background_y[0],2,2,starfieldColor,1);
//draw_sprite_skew_ext(sAurora,0,vw/2,0,1.1,1.1,0,c_white,1,0,5*sin(objectAge*.1))
//draw_sprite_ext(sAurora,0,vw/2,0,1,1,0,c_white,1);

shader_set(sh_seaweed);
shader_set_uniform_f(sh_time, time);
shader_set_uniform_f(sh_texuvs, tex_x, tex_y, tex_w, tex_h);
draw_sprite_ext(wavy_sprite,0,0,0,1,1,0,c_white,1);
shader_reset();
time += 0.2;



///////////////////////////////////
// draw to and draw noise surface w/ blend mode
///////////////////////////////////
//draw_moonnoisesurf();


// dark edges
//makeBlendTester();
draw_set_blend_mode_ext(9,5);
draw_circle_colour(vw/2+nrandom(32),vh/2+nrandom(32),vh*2,c_white,c_black,false);
draw_set_blend_mode(bm_normal);
///////////////////////////////////
// draw aura around player ship
///////////////////////////////////
/*
draw_set_blend_mode_ext(9,2);
draw_set_alpha(irandom(10)*.2);
draw_sprite_ext(sGradientCircle,0,vw/2,vh/2,4,4,0,c_yellow,1); // ? spotlight ?
if instance_exists(oShip) draw_sprite(sGradientCircle,0,oShip.x+irandom(6)-3,oShip.y+irandom(6)-3);
draw_set_alpha(1);
draw_set_blend_mode(bm_normal);
*/

display_set_gui_size(room_width, room_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
