<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sNightbird</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>recentDx = 0;
dx = 0;
dy = 0;

image_xscale = 2*scale;
image_yscale = 2*scale;
image_speed = .2;

doMove = false;

thrusterColor[0] = make_color_rgb(34,49,249);
thrusterColor[1] = make_color_rgb(198,42,252);
thrusterColor[2] = make_color_rgb(50,210,252);
thrusterColor[3] = make_color_rgb(205,205,252);
thrusterColor[4] = make_color_rgb(133,203,254);
thrusterColor[5] = make_color_rgb(133,47,254);
thrusterColor[6] = make_color_rgb(81,125,255);
thrusterColor[7] = make_color_rgb(231,117,251);

thrusterColorSize = 7;
drawThruster = true;

bigShotR = -12;

bigShotRMax = 64*scale;
bigShotRMin = bigShotRMax*.8;

invincible = true;
v=0;

weapon = -1;
active = true;
attacking = false;
canFire = 1;
canFireTriple = 1;
objectAge = 0;

//alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sfx(sndPlayerHit);

with oMegaThruster kill();
with oPickup kill();
with oEnemy {
    active = false;
    //visible = false;
    //kill();
}

room_speed = 10;
cursor_sprite = -1;

oBG.playerDestroyed_x = x;
oBG.playerDestroyed_y = y;
oBG.ded = true;
oBG.bg_color_rate = .05;

oBG.alarm[0] = 1;

with levelManager {
    active = false;
    timeline_running = false;
}
/*
with make(oFX) {
    image_speed = 0;
    sprite_index = sNightbird;
    speed = 0;
    direction = 0;
    gravity = 0;
}

with make(oFX) {
    image_speed = 0;
    sprite_index = sNightbirdWings;
    speed = 0;
    direction = 0;
    gravity = 0;
}
*/
with fMaze kill();
with mazeEndpoint kill();
with mazeEater kill();
with oMazeBlock speed = 0;
/*
sfx(sndPlayerHit);
room_speed = 10;

oBG.alarm[0] = 30;
levelManager.timeline_speed = 0;
levelManager.active = false;

make(vw/2,-64,failedLevel);

with make(oFX) {
    depth += 1;
    sprite_index = sBombLoop;
    image_xscale = 6;
    image_yscale = 6;
    image_speed = 1;
    image_alpha = 1;
}

with make(oFX) {
    sprite_index = sPlayerExplosion;
    image_xscale = 4;
    image_yscale = 4;
    image_speed = .5;
}
*/
/*
with make(x-16,y-16,oFX) {
    sprite_index = sPlayerExplosion;
    image_xscale = 3;
    image_yscale = -3;
    image_speed = .2;
    image_blend = make_color_rgb(0,160,248);
}

with make(x+16,y+16,oFX) {
    sprite_index = sPlayerExplosion;
    image_index = 1;
    image_xscale = -3;
    image_yscale = 3;
    image_speed = .2;
    image_blend = make_color_rgb(0,248,160);
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>doMove = true;
active = true;
alarm[1] = 1;

visible = !visible;

v+=1;

if v &gt; 12 {
    invincible = false;
    visible = true;

    v = 0;

} else {
    alarm[2] = 12;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///charge up bigshot

if active {
    bigShotR += 1;

    if bigShotR &lt; bigShotRMax alarm[1] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active  {
    objectAge += 1;

    // move player

    x += dx;
    y += dy;

    // 
    recentDx *= .5;
    recentDx += abs(dx);
   // image_speed = .2
    //if recentDx &gt; 40 image_speed = .4 else image_speed = .2;
    //image_speed = max(.2,recentDx*.1);
    //image_speed = max(.5,recentDx*.1); //max(.2,min(.5,recentDx*.1));
    //image_speed = 1;
    //trace('s:'+string(image_speed)+','+string(image_index));
    //trace(recentDx);
    

    // check bounds

    if x &gt; room_width x = room_width;
    if x &lt; 0 x = 0;
    if y &gt; room_height y = room_height;
    if y &lt; 0 y = 0;

    // fire
    doPlayerAttacks();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBeam">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shipHit();
shipHit();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shipHit();
shipHit();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shipHit();
shipHit();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPickup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if debug GAMEFLOW_gemsCollectedInLevel += 10 else GAMEFLOW_gemsCollectedInLevel += 1;
pickupsfx(sndGet);
oAudio.pickupPitch += .1;
other.collected = true;
with other instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active {
    dx = 0;
    dy = 0;
    attacking = false;
    doMove = false;
    
    alarm[0] = -1;
    if weapon == 3 alarm[1] = 1; // start charging big shot
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// fire bomb if large enough
if active {
    if bigShotR &gt; bigShotRMin {
        cId = instance_create(x,y-80*scale,oChargeShot);
        cId.bigShotR = bigShotR;
        cId.bigShotRMax = bigShotRMax;
        cId.bombOriginX = mouse_x;
        cId.bombOriginY = mouse_y;

        bigShotR = -40;
        
        sfx(sndDropBomb);
    } else {
        bigShotR = -12;
    }

    originX = mouse_x;
    originY = mouse_y;

    xLast = originX;
    yLast = originY;

    doMove = true;

    attacking = true;
    alarm[1] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if doMove {

    // get position player has moved finger to

    xNext = mouse_x;
    yNext = mouse_y;

    // compare it to previous position

    dx = xNext - xLast;
    dy = yNext - yLast;

    with oShot dx = other.dx;

    // prepare for next step

    xLast = xNext;
    yLast = yNext;
}

alarm[1] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///////////////////
////// thrusters
///////////////////

var yo = 32;
if drawThruster draw_sprite_ext(sThruster,objectAge*.25,x,y+yo,image_xscale,image_yscale,0,thrusterColor[irandom(thrusterColorSize)],.7);

draw_self();

///////////////////
////// wingz
///////////////////

if !drawThruster {
    wingspeed = 1;
} else {
    if recentDx &gt; 10 wingspeed = .7 else wingspeed = .1;
}
draw_sprite_ext(sNightbirdWings,objectAge*wingspeed,x,y,image_xscale,image_yscale,0,c_white,1);

///////////////////
////// weapons
///////////////////

if attacking draw_sprite(sMuzzleFlash,objectAge,x+irandom(4)-2,y+irandom(2)-1);

if weapon == 4 {
    //makeBlendTester();
    draw_set_blend_mode_ext(5,4);
    //draw_set_alpha(abs(sin(objectAge*.1)));
    //draw_sprite(sForcefield,0,x,y);
    draw_sprite_ext(sForcefield,0,x,y,1,1,0,merge_color(c_white,c_black,abs(sin(objectAge*.1))),1)
    draw_sprite_ext(sForcefield,0,x+irandom(6)-3,y+irandom(6)-3,1,1,0,c_white,.75);
    draw_set_blend_mode(bm_normal);
    //draw_set_alpha(1);
}

if bigShotR &gt; bigShotRMin/8 {
    draw_set_color(c_white);

    /*
    if bigShotR &gt;= bigShotRMin {
        xShake = irandom(bigShotR/(4*scale)) - bigShotR/(8*scale);
        yShake = irandom(bigShotR/(4*scale)) - bigShotR/(8*scale);
    } else {
        xShake = 0;
        yShake = 0;
    }
    */

    if bigShotR &gt;= bigShotRMin {
        xShake = irandom(6)-3;
        yShake = irandom(6)-3;
        draw_set_color(merge_color(c_white,make_color_rgb(84,159,255),abs(sin(objectAge*.1))));
    } else {
        xShake = 0;
        yShake = 0;
    }

    draw_circle(x+xShake,y-(64*scale)+yShake,bigShotR/2,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
