<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPickupIrrid</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sPickupHitbox</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = irandom(image_number);
image_xscale = 1;
image_yscale = image_xscale;
image_speed = .5;

distance_denom_minim = 64*scale;
pix_speed = 0;

vspeed = -4;
gravity = .2;

objectAge = irandom(128);
collected = false;

autocollect = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if y &lt; (room_height + 32) {
    fxID = instance_create(x+irandom(6)-3,y+irandom(6)-3,oFX);
    fxID.sprite_index = sGotPickup;
    fxID.image_blend = colorArray[c];
}
*/
//fxID.image_blend = oShip.thrusterColor[irandom(2)];
///if collected repeat 3 make(x+irandom(6)-3,y+irandom(6)-3,oPickupCollectedFX);
if collected repeat 3 make(x+irandom(6)-3,y+irandom(6)-3,oPickupCollectedFX);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if vspeed &gt; 3 vspeed = 3;

if room != rLevelSelect and y &gt; room_height*.95 {
    image_xscale = .5;
    image_yscale = .5;
    autocollect = true;
}

if autocollect image_angle += 1;

// move twd player
if instance_exists(oShip) {
    distance_denom = point_distance(x,y,oShip.x,oShip.y);
    if distance_denom &lt; distance_denom_minim or autocollect{
        distance_denom_minim = 999;
        move_towards_point(oShip.x+irandom(6*scale)-3*scale,oShip.y+irandom(6*scale)-3*scale,pix_speed);
    
        if pix_speed &lt; 20*scale pix_speed += .5*scale else pix_speed = 20*scale;
    }
}

if y &gt; (room_height + 32) instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
alarm[1] = irandom(30) + 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

// draw it
/*

r += 1*scale;
if r &gt; 8*scale r = 3*scale;

draw_set_color(myColor);

draw_circle(x,y,r,false);

draw_set_color(myRingColor);

draw_circle(x,y,r+8,true);
*/
//draw_set_blend_mode_ext(9,2);
//make(surfaceTester); //7,9
//draw_set_blend_mode_ext(surfaceTester.srcmode,surfaceTester.destmode);
//draw_set_blend_mode_ext(0,4);
//draw_set_alpha(1);
//draw_sprite(sGradientCircle,0,x,y);

//image_alpha = .5;
draw_self();
draw_sprite_ext(sPickupCrystal,0,x,y,image_xscale,image_yscale,image_angle,c_white,1);
draw_sprite_ext(sPickupFlash,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,1);
//draw_set_alpha(1);
//draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
