<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oBG</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>noiseblendsurf = 4;
noiseblenddest = 2;
alarm[11] = choose(60,120,150);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch irandom(3) {
    case 0:
        noiseblendsurf = 4;
        noiseblenddest = 2;
    break;
    case 1:
        noiseblendsurf = 2;
        noiseblenddest = 2;
    break;
    case 2:
        noiseblendsurf = 3;
        noiseblenddest = 2;
    break;
    case 3:
        noiseblendsurf = 7;
        noiseblenddest = 4;
    break;
}

alarm[11] = choose(120,150,180);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var surf_w = base_w;
var surf_h = base_h;

if !surface_exists(noisesurf) noisesurf = surface_create(surf_w, surf_h);
if !surface_exists(starssurf) starssurf = surface_create(surf_w, surf_h);

///////////////////////////////////
// draw flat bg color cycle
///////////////////////////////////

c1 = make_color_rgb(0,0,30);
c2 = make_color_rgb(0,5,50);
/*
if ded {
    c1 = make_color_rgb(255,0,0);
    c2 = make_color_rgb(0,10,255);
}

bg_color = merge_color(c1,c2,abs(sin(objectAge*bg_color_rate)));
draw_set_color(bg_color);
draw_rectangle(0,0,vw,vh,false);

// dark edges
//makeBlendTester();
draw_set_blend_mode_ext(9,5);
draw_circle_colour(vw/2+nrandom(32),vh/2+nrandom(32),vh*2*scale,c_white,c_black,false);
draw_set_blend_mode(bm_normal);

///////////////////////////////////
// draw starfields
///////////////////////////////////

background_vspeed[0] = 1;
var starfieldColor = merge_color(c_gray,make_color_rgb(16,32,98),abs(sin(objectAge*.002)));
draw_background_tiled_ext(bgStarfield,0,background_y[0],2*scale,2*scale,starfieldColor,1);
//draw_background_tiled_ext(bgMoon,0,background_y[0],2,2,starfieldColor,1);
*/
///////////////////////////////////
// draw to and draw noise surface w/ blend mode
///////////////////////////////////

draw_sun(surf_w,surf_h);

display_set_gui_size(room_width, room_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
