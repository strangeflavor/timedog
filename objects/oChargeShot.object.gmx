<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//vspeed = -1;

alarm[0] = 20; // explode!

friction=.0125;

bigShotR = -1;

launched = false;

direction = 90;

l =0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///e=instance_create(x,y,oChargeShotExplode);
e=instance_create(x,y,oChargeShotExplode);
//e.vspeed = vspeed;
//e.hspeed = hspeed;
if bigShotR == bigShotRMax e.image_index = 0 else e.image_index = 7;

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if myDirection == 0 {
    if oShip.x &gt; playerX {
        myDirection = 1;
    } else {
        if oShip.x &lt; playerX {
            myDirection = -1;
        }
    }
}

if myDirection == 1 hspeed += .1;
if myDirection == -1 hspeed -= .1;
*/

//if alarm[0] &lt; 6 or mouse_check_button_released(mb_left) {

if launched == false {
    if point_distance(bombOriginX,bombOriginY,mouse_x,mouse_y) &gt; 100 {
        direction = point_direction(bombOriginX,bombOriginY,mouse_x,mouse_y);
        speed += l*.25;
        if speed &gt; 2*scale speed = 2*scale;
    } else {
        direction = 90;
        speed = 1*scale;
    }

    l+=1;
    if l &gt; 15 or mouse_check_button_released(mb_left) launched = true;
}

draw_set_color(c_white);
draw_circle(x,y,bigShotR/2,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
