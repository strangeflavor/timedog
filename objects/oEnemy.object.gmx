<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>objectAge = 0;
HP = 1;
recoil = 0;
state = _NONE;
use_state_path = false;

value = 0;

image_xscale = 2*scale
image_yscale = 2*scale

yStop = vh*2
checkStop = true;

amLeader = false;
hasLeader = false;
myFormationIndex = -1;
myFormationPosition = -1;
formationSize = -1; // # of allies in the same formation. if this enemy is destroyed and hasLeader = true and allies &lt;= 0, value is inverted

waitTime = -1;
active = false;

path = -1;
path_endtime = -1;

killWhenBelowScreen = true;

explosionType = sLargeExplosion;
value = 1;

phaseCreateVars();

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active {
    if y &lt; vh + 32*scale {
        sfx(sndDefeatEnemy);
    
        fxId = instance_create(x,y,oFX);
    
        fxId.sprite_index = explosionType;
        fxId.image_xscale = image_xscale/2;
        fxId.image_yscale = image_yscale/2;
    
        /*
        if myFormationIndex &gt; -1 {
            controller.formationArray[myFormationIndex,myFormationPosition] = -1;
            //show_message('myformationindex: '+string(myFormationIndex)+', myformationposition: '+string(myFormationPosition));
    
            var alliesRemaining;
            alliesRemaining = formationSize;
    
           for (i=0;i&lt;formationSize;i+=1) {
                if controller.formationArray[myFormationIndex,i] &lt; 0 {
                    alliesRemaining -= 1;
                }
            }
    
            if alliesRemaining &lt; 1 {
                //show_message('no allies left');
                value *= -1;
            }
        }
        */
    
        if value &gt; 0 {
            repeat value {
                instance_create(x+irandom(32)-16,y+irandom(32)-16,oPickup);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///resume motion
friction = 0;
speed = pSpeed;
direction = pDirection;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if yStop != -1 checkStop = true;
active = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active and use_state_path {
    update_state_path();
    do_state(state);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active {
    objectAge += 1;
    if HP &lt; 0 instance_destroy();
    if killWhenBelowScreen {
       if y &gt; (vh + 64*scale) kill(self);
    }

    if recoil &gt; 0 {
        recoil -= 1;
        y+=1;
    }

    if path_index = -1 {
        if path &gt; -1 {
            trace('enemy starting path at spd '+string(path_speed));
            path_start(path,path_speed,path_action_continue,false);
        }
    } else {
        if path_endtime &gt; -1 and objectAge == path_endtime {
            path = -1;
            path_end();
        }
    }

    if phase[currentPhase] &gt; -1 {
        script_execute(phase[currentPhase]);
        if y &gt; yStop {
            /*
            pSpeed = speed;
            pDirection = direction;

            checkStop = false;
            friction = .8;
            doEvent(stop);
            */
            checkStop = false;
            timeline_index = -1;
            
        }
    }

    if currentPhase &lt; 8 and phaseCondition[currentPhase+1] &gt; -1 {
        checkPhaseCondition();
    }

} else {
    if waitTime &gt; 0 waitTime -= 1 else active = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oShot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active {
    HP -= other.damage;
    with other {
        HP -= 1;
        if HP &lt;= 0 {
            instance_destroy();
            sfx(sndDamageEnemy)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
