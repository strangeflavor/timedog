<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sThexbot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oLargeEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>explosionType = _LARGE;
killWhenOffscreen = true;
offScreenTimer = 36;
image_angle_tween = 0;
value=3;

image_speed = .2;

HP = 48;

image_xscale = scale*6;
image_yscale = scale*6;

checkyStop = true;
yStop = vh/4;

r = 0;

centerblend = choose(c_red,c_blue,c_yellow,c_lime);

makeTurret(0,0,0);

setup_state_paths();
add_state_path(_WAIT,90);
add_state_path(_CIRCLE,45);
add_state_path(_WAIT,150);
state_path_loop_position = 1;

start_state_paths();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if currentPhase &gt; 0 invul = false;

if active {
    switch state {
        case _CIRCLE:
            if currentPhase &lt; 2 {
                var eID = -1;
                var eDir = 0;
                var numShots = 32;

                //if frac(current_state_age / 60) == 0 {
                if current_state_age == 1 {
                    for (i=0;i&lt;numShots;i+=1) {
                        eID = make(getTurretX(0),getTurretY(0),oBullet);
                        eID.depth -= 1;
                        eID.speed = 5;
                        eID.direction = eDir;
                        eDir += 360/numShots;
                    }

                    numShots = 12;
                    for (i=0;i&lt;numShots;i+=1) {
                        eID = make(getTurretX(0),getTurretY(0),oBullet);
                        eID.sprite_index = sShot3;
                        eID.depth -= 1;
                        eID.speed = 4;
                        eID.direction = eDir;
                        eDir += 360/numShots;
                    }

                    numShots = 8;
                    for (i=0;i&lt;numShots;i+=1) {
                        eID = make(getTurretX(0),getTurretY(0),oBullet);
                        with eID image_scale(3);
                        eID.sprite_index = sShot1;
                        eID.depth -= 1;
                        eID.speed = 2;
                        eID.direction = eDir;
                        eDir += 360/numShots;
                    }
                }
            }
        break;
    }

    if TweenExists(image_angle_tween) {
        image_speed = 0;
        image_angle = TweenCalc(image_angle_tween);
        image_xscale = 2 + (abs(image_angle)/360);
        image_yscale = image_xscale;
        image_blend = merge_color(image_blend,c_black,abs(image_angle)/360);
        centerblend = merge_color(centerblend,c_red,abs(image_angle)/360);
    }

    if objectAge == fireAge {
        if !TweenExists(image_angle_tween) {
            image_angle_tween = TweenFire(id, "image_angle", EaseInOutElastic, TWEEN_MODE_BOUNCE, true, 0.0, .5, 0, 360);
            fireAge += 16;
        } else {
            if instance_exists(oShip) {
                with make(x,y,oBullet) {
                    direction = irandom(24)-12+point_direction(x,y,oShip.x,oShip.y);
                    speed = 5+choose(levelManager.difficulty,0);
                }
                fired += 1;
                if levelManager.difficulty &gt;= 2 and fired &lt; 2 fireAge += 12;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop event

fire('triple');
resumeMotion(45);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if flashing &gt;= 0 {
    draw_sprite_ext(sThexbotCenter,image_index,x,y,image_xscale,image_yscale,image_angle,centerblend,1);
    
    if !invul draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
