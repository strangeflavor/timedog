<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>levelManager</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>winCondition = _WIN_TIME;
winConditionValue = 99999;

alarm[1] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create grid controller
instance_create(0,0,cont_steering);

//Create demo object
//for controlling grid resolution on the fly
//instance_create(0,0,demo_grid_resize);

//Spawn 2-5 random size solids in random places
/*
repeat(irandom_range(2,5)) {
    //Sprite size of solids is 64x64 by default
    var obstacle_scale_x = (random_range(0.5, 2));
    var obstacle_scale_y = (random_range(0.5, 2));
    var buffer_x = (32*obstacle_scale_x) + 32;
    var buffer_y = (32*obstacle_scale_y) + 32;
    var new_x = irandom_range(buffer_x, room_width-buffer_x);
    var new_y = irandom_range(buffer_y, room_height-buffer_y);
    var new_obstacle = instance_create(new_x,new_y,choose(obj_solid_circle,obj_solid_square));
    new_obstacle.image_xscale = obstacle_scale_x;
    new_obstacle.image_yscale = obstacle_scale_y;
}
*/

//Spawn Chasers
repeat(irandom_range(3,6)) {
    var new_drone = instance_create(random(vw/2),random(vh),demo_drone_chaser); //Chasers spawn on left
    //Make sure drone isn't spawned stuck in solid object
    with(new_drone) {
        if(place_meeting(x,y,oMeteor)) { //Solid collision detected
            while(place_meeting(x,y,oMeteor)) {
                //Give new location and try again
                x = random(vw/2); 
                y = random(vh);
            }
        }
    }
}

//Spawn Chasees
repeat(32) {
    var new_drone = instance_create(random(vw/2)+(vw/2),random(vh),demo_drone_chasee); //Chasees spawn on right
    //Make sure drone isn't spawned stuck in solid object
    with(new_drone) {
        if(place_meeting(x,y,oMeteor)) { //Solid collision detected
            while(place_meeting(x,y,oMeteor)) {
                //Give new location and try again
                x = random(vw/2)+(vw/2);
                y = random(vh);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
