<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMantaRay</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oLargeEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_scale(1);

killWhenOffscreen = false;
killWhenBelowScreen = false;

HP = 320;

pilotID[0] = make(oMerchantPilot);
pilotID[0].ship_xo = 0;
pilotID[0].ship_yo = 0;

state = _WAIT;

setup_state_paths();
add_state_path(_WAIT,120);
state_path_loop_position = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i=0;i&lt;16;i+=1) {
    if pilotID[i] &gt; -1 {
        if instance_exists(pilotID[i]) {
            pilotID[i].x = xprevious + pilotID[i].ship_xo;
            pilotID[i].y = y+30 + pilotID[i].ship_yo;
        }
    }
}

//image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active {

    switch state {
        case _WAIT:
            if state_path_position &gt; 1 or state_path_loops &gt; 0 {
                if current_state_age &gt; 30 {
                    //shoot_spray(2,24,choose(2,3,3,4),sShot3);
                }
            }

            ao = wave(-5,5,3,0);
            image_angle = 90 + ao;
            x = xstart + ao*1.5;//wave(-8,8,3,0);

            // bubbls   
            if objectAge mod 6 == 0 {
                repeat (5) {
                    var xo = -other.ao*2 + nrandom(12); //lengthdir_x(32,direction-90) + nrandom(8);
                    var yo = 32+lengthdir_y(32,direction-90) + nrandom(8);
                    with make(x+xo,y+yo,oBubble) {
                        finalScale = choose(.25,.1);
                        initScale = .25;

                        alarm[0] = choose(9,12,16,19);
                        sprite_index = sBubble;
                        direction = 270 + other.ao*2;
                        speed = choose(3,4,5,6);//other.speed*.7;
                    }
                }
            }
            
            //if current_state_age &gt; 250 and current_state_age mod 240 == 0 {
            if current_state_age &gt; 10 and current_state_age mod 120 == 0 {
                var yy = y + choose(-1,1)*choose(vh/5,vh/3,vh/4);
                yy = floor(clamp(yy,80,vh-150));

                TweenSimpleMove(x,y,x,yy,160+nrandom(30),EaseInExpo);
            }
        break;
        case _BACKANDFORTH_HORI:
            if current_state_age == 15 {
                addRecoil(20);

                beam[0] = make(getTurretX(0),getTurretY(0),oBeam);
                with beam[0] {
                    xo = x - other.x;
                    yo = 0;//y + sprite_height/3;
                    owner = other.id;
                    duration = 330;
                }

                beam[1] = make(getTurretX(1),getTurretY(1),oBeam);
                with beam[1] {
                    xo = x - other.x;
                    yo = 0;//y + sprite_height/3;
                    owner = other.id;
                    duration = 330;
                }

                if state_path_position &gt; 0 or state_path_loops &gt; 0 {
                    shoot_spray(2,24,choose(2,3,3,4),sShot3);
                }
            }
        break;
        case _SPIRAL:
            if frac(objectAge/2) == 0 {
                if current_state_age &lt; 120 {
                    with make(getTurretX(0),getTurretY(0),oBullet) {
                        sprite_index = sShot1;
                        depth -= 1;
                        direction = 360*sin(other.objectAge*.04);
                        speed = 5;
                        friction = .02;
                        image_blend = make_color_rgb(255,0,128);
                    }
                } else {
                    with make(getTurretX(1),getTurretY(1),oBullet) {
                        sprite_index = sShot1;
                        depth -= 1;
                        direction = 360*sin(other.objectAge*.03);
                        speed = 5;
                        friction = .02;
                        image_blend = make_color_rgb(255,0,128);
                    }
                }
            }
        break;
    }

    /*
    if change_attack_state &gt; -1 {
        change_attack_state -= 1;
        if change_attack_state &lt; 0 {
            change_attack_state = -1;
            attack_state = next_attack_state;
        }
    }
    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
