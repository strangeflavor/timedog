<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSatellite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>oLargeEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//objectAge = nrandom(60);
make(oFXFlare);
//make(oExplo);
HP = 24;
value = 1;
image_speed = 0;//.25;
killWhenOffscreen = false;
Angle = instance_number(oSatellite*30);

state = _BACKANDFORTH_HORI;
image_rate = choose(1,1.3,1.5,1.7);
sinRate = .2;
myPos = instance_number(oSatellite);

//TweenSimpleImageCycle(0,image_number-1,1,EaseInBounce);

//y -= 200;
//TweenSimpleMove(x,y,x,ystart,choose(60,90)+nrandom(16),EaseOutQuint);

//TweenSimpleMove(x,y,x+120,y,.5,EaseInOutElastic);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch state {
    case _BACKANDFORTH_HORI:
        if xstart &gt; vw/2 speed_sign = 1 else speed_sign = -1;
        
        y += sin(objectAge*sinRate);

        if x &gt; vw + 32 {
            x = -32;
            y += 80;
            sinRate = choose(.2,.3,.5);
            fireAge = objectAge + 15 + myPos*12;;
        }
        
        if x &lt; -32 {
            x = vw + 32;
            y += 80;
            sinRate = choose(.2,.3,.5);
            fireAge = objectAge + 15 + myPos*12;
        }
        
        if objectAge == fireAge {
            TweenSimpleRotate(image_angle,image_angle+180,36,EaseInOutElastic);
            if frac(myPos/2) == 0 {
                with make(x,y,shot_spiller) {
                    sprite_index = sShot0;
                    rounds = 2;
                    shot_speed = 4;
                    shot_direction_jitter = 5;
                    shot_speed_delta = .2; // change in speed per shot
                }
            } else {
                with make(x,y,shot_spiller) {
                    sprite_index = sShot3;
                    image_speed = .5;
                    rounds = 3;
                    shot_speed = 3;
                    shot_direction_jitter = 8;
                    shot_speed_delta = .2; // change in speed per shot
                }
            }
        }

        if y &gt; 400 {
            state = _MOVEVERT;
        }

        image_index = wave(0,image_number,image_rate,0);
    break;
    case _MOVEVERT:
        y = lerp(y,40,.1);
        image_index = wave(image_number,0,image_rate*2,0);
        
        if y &lt;= 50 {
            x = xstart;
            state = _BACKANDFORTH_HORI;
            speed *= -1;
            objectAge = 0;
        }
    break;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
