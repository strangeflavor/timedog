<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_timer = 0;
step = 0;
npointsDefault = 180;
npoints = npointsDefault;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stepstart = 0;
stepend = 1/60.0;

xleft = 0;
ybottom = 18;

radius = 85;
xcenter = 140;
ycenter = 96;
_speed = .5;

ilength = 170;
 
radius = (room_height*.9)/2;
xcenter = room_width/2;
ycenter = room_height/2;
/*
if mode == 'midi' {
    rad = 5;
    ftime = midi_get(5)*stepend*127;
} else {
    npoints = sqr(max(.001,x_axis_get())*(npointsDefault*.75));
    ftime = _get_timer();
    rad = sqr(2*max(.01,(y_axis_get()*2)));
}
*/

ftime = _get_timer();
npoints = 5 + (ftime);//sqr(max(.001,x_axis_get())*(npointsDefault*.75));
rad = 5;//sqr(2*max(.01,(y_axis_get()*2)));
//trace(ftime)

step = stepstart + (ftime * (stepend - stepstart));

image_blend = oMenu.image_blend;
draw_set_color(image_blend);

draw_set_blend_mode_ext(bm_src_alpha,bm_one);

for (i = 1; i &lt; npoints; i+=1)
  {
    var a = 2*pi * step * i;
    var radiusi = radius; //radius*sin(a*ftime); // VERY NICE
    _x = xcenter + cos(a) * (i/npoints) * radiusi;
    _y = ycenter + sin(a) * (i/npoints) * radiusi;
    draw_circle(_x, room_height-_y, rad,false);
  }

  draw_set_blend_mode(bm_normal);
//step += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
