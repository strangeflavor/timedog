<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMirror</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oLargeEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>value = 10;
HP = 360;
flashing = 0;


y = -64;
//xdest = room_width/2;
//ydest = room_height/8;

x1 = 128;
x2 = room_width-x1;
//xVel = 2;
//yVel = 7;
slowdown = 0;

absorb = false; // used to build energy and display particles when shot
absorbCount = -1;

attack_state = -1;

attack_started = false;
state = _WAIT;

image_speed = .1;

setup_state_paths();
add_state_path(_WAIT,120);
add_state_path(_EMPTYSTATE0,99);
state_path_loop_position = -1;
/*
add_attack_state_path(_WAIT,180);
add_attack_state_path(_ATK_BEAMS,-1);
*/
start_state_paths();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _BEAM = _EMPTYSTATE1;
var _FOLLOW = _EMPTYSTATE0;

if (live_call()) return live_result;
if active {
    if absorb {
        absorbCount += 1;

        _sparkdirection = irandom(360);
        _sparkx = lengthdir_x(sprite_width/2+32,_sparkdirection);
        _sparky = lengthdir_y(sprite_height/2+32,_sparkdirection);
        repeat 2 {
            with make(x+_sparkx,y+_sparky,oMirrorFX) {
                parentID = other.id;
                image_angle = irandom(360);
                sprite_index = sSparkle;
                image_speed = choose(.2,.3);
                image_scale(2);
                depth = other.depth - 1;
                //direction = other._sparkdirection - 180;
                //speed = 7;
                //friction = .02;
            }
        }
        image_scale(wave(2,2.5,.666,0));
    }
    image_scale(lerp(image_xscale,2,.05));
    absorb = false;
    if absorbCount &gt; 180 {
        change_state(_BEAM);
        absorbCount = -1;
    }

    switch state {
        case _WAIT:
            x = lerp(oShip.x,x,.1);  // +wave(-16,16,1.5,0),
            y = lerp(max(20,oShip.y-bh*.25),y,.07);

            image_speed = .5;
        break;
        case _FOLLOW:
            if instance_exists(oShip) {
                x = lerp(x,oShip.x,.25);
                y = lerp(max(20,oShip.y-bh*.25),y,.7);

                if x &lt; oShip.x - 8 {
                    image_angle = lerp(-15,image_angle,.9);
                } else {
                    if x &gt; oShip.x + 8 {
                        image_angle = lerp(15,image_angle,.9);
                    } else {
                        image_angle = lerp(0,image_angle,.9);
                    }
                }
            }

            image_speed = wave(.75,.1,2,0);
        break;
        // fire beam
        case _BEAM:
            if current_state_age &lt; 60 {
                x = lerp(x,oShip.x,.001);
                y = lerp(y,max(20,oShip.y-bh*.25),.001);
            }
            image_angle = lerp(image_angle,0,.5);
            image_speed = 1;

            if current_state_age == 90 {
                with make(oBeam) {
                    xo = 0;
                    yo = 8;
                    owner = other.id;
                    duration = 120;
                    //if other.aimAtPlayer duration = 90 else duration = 120;
                }
            }

        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (live_call()) return live_result;
if active and !invul and y &gt; 0 {
    with other kill();
    absorb = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oShot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active and !invul and y &gt; 0 {
    with other kill();
    absorb = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if flashing &lt; 0 {
    flashing += 1;
    if flashing == 0 flashing = 12;
} else {
    if flashing &gt; 0 flashing -= 1;
}

draw_self();
if flashing &lt; 0 {
    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,1);
}

if debug &gt;= 1 {
    draw_set_halign(fa_middle);
    draw_set_valign(fa_middle);
    draw_set_font(fFont);
    draw_set_color(c_white);
    draw_text(x,y+abs(sprite_height/2)+8,state_get_name(state)+'/'+string(current_state_age));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
