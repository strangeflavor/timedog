<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sOceanCreep</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oLargeEnemy</parentName>
  <maskName>sOceanCreepMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>my_image_scale = .5;

myDirection = 180;
killWhenOffscreen = false;
y = -bh/2;

xdest = room_width/2;
ydest = room_height/3;
xVel = .25;
x1 = bw/2 - 20;
x2 = bw/2 + 20;

setup_state_paths();
add_state_path(_APPROACH,90);
add_state_path(_BACKANDFORTH_HORI,390);
state_path_loop_position = 1;
start_state_paths();
eyeID = make(oOceanCreepEye);
eyeID.my_image_scale = my_image_scale;
eyeID.depth = depth - 1;
eyeID_offset = sprite_height/4+8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (live_call()) return live_result;
if instance_exists(oShip) {
    var ed, dd, ex, ey, dx;

    ed = point_direction(x,y,oShip.x,oShip.y);
    dd = angle_difference(myDirection, ed);
    dx = .1+abs(dd*.01);

    myDirection -= (min(abs(dd), 10) * sign(dd))*dx;

    ex = lengthdir_x(sprite_width/5,myDirection);
    ey = lengthdir_y(sprite_width/5,myDirection);
    
    eyeID.x = x+ex+14;
    eyeID.y = y+ey+6;

    if state_path_position &gt; 0 {
        y = ydest + wave(-6,6,90,0)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_scale(wave(my_image_scale-.1,my_image_scale-.05,3.333,0));
image_index = 4;

draw_sprite_ext(sprite_index,5,x,y,image_xscale,image_yscale,0,c_white,1); // outline
draw_sprite_ext(sprite_index,4,x,y,image_xscale,image_yscale,0,c_white,1); // base

//makeBlendTester()
//draw_set_blend_mode_ext(9,4);
draw_set_blend_mode_ext(8,4);
draw_set_blend_mode_ext(2,4);

// use this when weak
    //draw_set_blend_mode_ext(2,2);
    //draw_sprite_ext(sAlphaGradientCircle,0,x+24,y-8,image_xscale*4.5,image_yscale*4.5,0,c_red,1);
// use this when weak
    
draw_sprite_ext(sAlphaGradientCircle,0,x+24,y-8,image_xscale*4,image_yscale*4,0,c_purple,1);
draw_set_blend_mode(bm_normal);

draw_set_blend_mode_ext(10,4);
draw_sprite_ext(sprite_index,1,x,y,image_xscale,image_yscale,0,c_white,wave(.5,.25,2.333,0)); // 'skin'
draw_set_blend_mode(bm_normal);
draw_sprite_ext(sprite_index,3,x,y,image_xscale,image_yscale,0,c_white,1); // veins
draw_sprite_ext(sprite_index,2,x,y,image_xscale,image_yscale,0,c_white,1); // flagellum
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
